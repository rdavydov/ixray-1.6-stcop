project(ParticlesEditor)

# Files import
file(GLOB_RECURSE EPE_SOURCE_ALL_FILES CONFIGURE_DEPENDS
    "*.*"
)

set(EPE_SRC_FILES)

source_group("src" FILES ${EPE_SOURCE_ALL_FILES})

# Apply list
list(APPEND EPE_SRC_FILES ${EPE_SOURCE_ALL_FILES})

# Remove unused files
list(FILTER EPE_SRC_FILES EXCLUDE REGEX "cl_raypick.cpp$")

# ParticlesEditor project
add_library(ParticlesEditor SHARED ${EPE_SRC_FILES})
target_include_directories(ParticlesEditor PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")
target_precompile_headers(ParticlesEditor PRIVATE "stdafx.h")

# Project defines
target_compile_definitions(ParticlesEditor PRIVATE ParticlesEditor_EXPORTS)
target_compile_definitions(ParticlesEditor PRIVATE _WINDOWS)
target_compile_definitions(ParticlesEditor PRIVATE _USRDLL)
target_compile_definitions(ParticlesEditor PUBLIC XR_EDITOR_NEW)

add_compile_options(/fp:fast)
target_compile_definitions(ParticlesEditor PRIVATE "$<$<CONFIG:Debug>:DEBUG>")

# Linker list
target_link_libraries(ParticlesEditor PUBLIC xrCore)
target_link_libraries(ParticlesEditor PUBLIC xrEUI)
target_link_libraries(ParticlesEditor PUBLIC xrEProps)

# Move precompiled header
set_target_properties(ParticlesEditor PROPERTIES DISABLE_PRECOMPILE_HEADERS ON)

file(GLOB_RECURSE EPE_SOURCE_PCH_FILES "stdafx.*")
source_group("pch" FILES ${EPE_SOURCE_PCH_FILES})
